# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
#fast,slow
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        f=s=head
        stack=[]
        max_twin_sum=0
        while f and f.next:
            f=f.next.next
            stack.append(s)
            s=s.next
        while(s):
            max_twin_sum=max(max_twin_sum,stack.pop().val+s.val)
            s=s.next
        return max_twin_sum
        
